---
import { Image } from "astro:assets";
import myWork from "../assets/work/teamwork.webp";
import macbookScreen from "../assets/work/macbook-screen.svg?raw";
import macbookBase from "../assets/work/macbook-base.svg?raw";
---

<div id="mywork-section" class="min-h-[300vh] bg-primary-prussian-blue">
  <div
    class="sticky"
    style="top: calc((max(-862px, (-862/1366 * 100vw)) + 100vh)/2);"
  >
    <div class="w-full flex justify-center">
      <div class="max-w-desktop w-full">
        <div class="w-full h-full overflow-hidden">
          <div
            id="mywork-section__scale-object"
            class="flex flex-col items-center scale-[1.25] z-10 top-0 left-0 w-full h-full"
          >
            <div
              class="relative w-full scale-95 origin-bottom [&>svg]:relative [&>svg]:z-10 [&>svg]:w-full [&>svg]:h-full"
            >
              <Fragment set:html={macbookScreen} />
              <div
                class="absolute top-0 left-0 w-full h-full rounded-2xl overflow-hidden"
              >
                <Image
                  class="w-full h-full object-cover"
                  src={myWork}
                  alt="My Work"
                />
                <div
                  class="absolute w-full h-full flex flex-col justify-center items-center top-0 left-0 text-center px-layout"
                >
                  <h2 class="text-h2 text-white font-bold">My Work</h2>
                  <p class="text-p2 text-white mt-4">
                    I&apos;ve worked both at a professional workplace, voluntary
                    projects, and also my own personal projects. <br />Scroll
                    down to see the work that I&apos;ve done!
                  </p>
                </div>
              </div>
            </div>
            <div class="w-full [&>svg]:w-full">
              <Fragment set:html={macbookBase} />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const myWorkSection = document.getElementById("mywork-section");
  const myWorkSectionScaleObj = document.getElementById(
    "mywork-section__scale-object"
  );
  let wasInViewport = false;
  let coords: ReturnType<typeof getCoords>;

  function getCoords(elem: HTMLElement) {
    // crossbrowser version
    var box = elem.getBoundingClientRect();

    var body = document.body;
    var docEl = document.documentElement;

    var scrollTop = window.scrollY || docEl.scrollTop || body.scrollTop;
    var scrollLeft = window.scrollX || docEl.scrollLeft || body.scrollLeft;

    var clientTop = docEl.clientTop || body.clientTop || 0;
    var clientLeft = docEl.clientLeft || body.clientLeft || 0;

    var top = box.top + scrollTop - clientTop;
    var left = box.left + scrollLeft - clientLeft;

    return { top: Math.round(top), left: Math.round(left) };
  }

  document.addEventListener("DOMContentLoaded", () => {
    if (!myWorkSection) return;
    coords = getCoords(myWorkSection);
  });

  document.addEventListener("scroll", (e) => {
    if (!coords || !myWorkSectionScaleObj) return;
    const vh = window.innerHeight / 100;
    const currentScroll = document.documentElement.scrollTop;
    const start = coords.top;
    const stop = coords.top + 300 * vh;
    if (currentScroll > start && currentScroll < stop) {
      const scale = Math.max(1.25 - (currentScroll - start) / 1400, 0.5);
      myWorkSectionScaleObj.style.transform = `scale(${scale})`;
      wasInViewport = true;
    } else if (wasInViewport) {
      if (currentScroll <= start) {
        myWorkSectionScaleObj.style.transform = "";
      } else {
        myWorkSectionScaleObj.style.transform = "scale(0.5)";
      }
      wasInViewport = false;
    }
  });
</script>
