---
import { Image } from "astro:assets";
import myWork from "~/assets/work/my-work-desktop.webp";
---

<div
  id="work-desktop"
  class="relative z-10 hidden min-h-[300vh] bg-primary-prussian-blue md:block"
>
  <div
    class="sticky"
    style="top: calc((max(-862px, (-862/1366 * 100vw)) + 100vh)/2);"
  >
    <div class="flex w-full justify-center">
      <div class="w-full max-w-desktop">
        <div class="h-full w-full overflow-hidden">
          <div
            id="work-desktop__scale-object"
            class="left-0 top-0 z-10 flex h-full w-full scale-110 flex-col items-center"
          >
            <Image src={myWork} alt="My Work" width={1366} height={923} />
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    let initialized = false;
    // MS: Scroll handlers
    function initScrollHandler() {
      const myWorkSection = document.getElementById("work-desktop");
      const myWorkSectionScaleObj = document.getElementById(
        "work-desktop__scale-object",
      );
      let wasInViewport = false;
      let coords: ReturnType<typeof getCoords>;

      function getCoords(elem: HTMLElement) {
        // crossbrowser version
        var box = elem.getBoundingClientRect();

        var body = document.body;
        var docEl = document.documentElement;

        var scrollTop = window.scrollY || docEl.scrollTop || body.scrollTop;
        var scrollLeft = window.scrollX || docEl.scrollLeft || body.scrollLeft;

        var clientTop = docEl.clientTop || body.clientTop || 0;
        var clientLeft = docEl.clientLeft || body.clientLeft || 0;

        var top = box.top + scrollTop - clientTop;
        var left = box.left + scrollLeft - clientLeft;

        return { top: Math.round(top), left: Math.round(left) };
      }

      document.addEventListener("DOMContentLoaded", () => {
        if (!myWorkSection) return;
        coords = getCoords(myWorkSection);
      });

      document.addEventListener("scroll", (e) => {
        if (!coords || !myWorkSectionScaleObj) return;
        const vh = window.innerHeight / 100;
        const currentScroll = document.documentElement.scrollTop;
        const start = coords.top;
        const stop = coords.top + 300 * vh;
        if (currentScroll > start && currentScroll < stop) {
          const scale = Math.max(1.1 - (currentScroll - start) / 1400, 0.5);
          myWorkSectionScaleObj.style.transform = `scale(${scale})`;
          wasInViewport = true;
        } else if (wasInViewport) {
          if (currentScroll <= start) {
            myWorkSectionScaleObj.style.transform = "";
          } else {
            myWorkSectionScaleObj.style.transform = "scale(0.5)";
          }
          wasInViewport = false;
        }
      });

      initialized = true;
    }

    initScrollHandler();

    document.addEventListener("resize", () => {
      if (window.innerWidth >= 768 && !initialized) {
        initScrollHandler();
      } else {
        initialized = false;
      }
    });
  </script>
</div>
